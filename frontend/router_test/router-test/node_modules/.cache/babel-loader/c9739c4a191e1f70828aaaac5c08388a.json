{"remainingRequest":"/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/node_modules/babel-loader/lib/index.js!/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/src/components/SensorGraph.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/src/components/SensorGraph.vue","mtime":1614954032854},{"path":"/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy90aW50aW4ud2lobGJvcmcvRG9jdW1lbnRzL1Byb2plY3RzL0dyb3dwaXBlcy1hcGwvZnJvbnRlbmQvcm91dGVyX3Rlc3Qvcm91dGVyLXRlc3Qvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdTZW5zb3JHcmFwaCcsCiAgcHJvcHM6IHsKICAgIGlkOiBOdW1iZXIsCiAgICB0eXBlOiBTdHJpbmcKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBvcHRpb25zOiB7CiAgICAgICAgY2hhcnQ6IHsKICAgICAgICAgIGlkOiAndnVlY2hhcnQtZXhhbXBsZScsCiAgICAgICAgICBmb3JlQ29sb3I6ICcjMDAwJwogICAgICAgIH0sCiAgICAgICAgeGF4aXM6IHsKICAgICAgICAgIGNhdGVnb3JpZXM6IEFycmF5CiAgICAgICAgfQogICAgICB9LAogICAgICBzZXJpZXM6IFt7CiAgICAgICAgbmFtZTogJ3Nlcmllcy0xJywKICAgICAgICBkYXRhOiBBcnJheQogICAgICB9XSwKICAgICAgbG9hZGVkX2RhdGE6IGZhbHNlCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0X2RhdGE6IGZ1bmN0aW9uIGdldF9kYXRhKGlkKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciByZXNwb25zZSwgZGF0YSwgdmFsdWVfbGlzdCwgY2F0ZWdvcnlfbGlzdDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cDovL2xvY2FsaG9zdDo0NTY3L3NlbnNvcl9kYXRhLyIuY29uY2F0KGlkKSwgewogICAgICAgICAgICAgICAgICBtZXRob2Q6ICdHRVQnLAogICAgICAgICAgICAgICAgICBtb2RlOiAnY29ycycKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIGRhdGEgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgdmFsdWVfbGlzdCA9IFtdOwogICAgICAgICAgICAgICAgY2F0ZWdvcnlfbGlzdCA9IFtdOwogICAgICAgICAgICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSkgewogICAgICAgICAgICAgICAgICB2YWx1ZV9saXN0LnB1c2godmFsdWVbMF0pOwogICAgICAgICAgICAgICAgICBjYXRlZ29yeV9saXN0LnB1c2godmFsdWVbMV0pOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBfdGhpcy5zZXJpZXNbMF0uZGF0YSA9IHZhbHVlX2xpc3Q7CiAgICAgICAgICAgICAgICBfdGhpcy5vcHRpb25zLnhheGlzLmNhdGVnb3JpZXMgPSBjYXRlZ29yeV9saXN0OwogICAgICAgICAgICAgICAgX3RoaXMubG9hZGVkX2RhdGEgPSB0cnVlOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgYmVmb3JlTW91bnQ6IGZ1bmN0aW9uIGJlZm9yZU1vdW50KCkgewogICAgdGhpcy5nZXRfZGF0YSh0aGlzLmlkKTsKICB9Cn07"},{"version":3,"sources":["/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/src/components/SensorGraph.vue"],"names":[],"mappings":";;;;;AAQA,eAAe;AACX,EAAA,IAAI,EAAE,aADK;AAEX,EAAA,KAAK,EAAE;AACH,IAAA,EAAE,EAAE,MADD;AAEH,IAAA,IAAI,EAAE;AAFH,GAFI;AAMX,EAAA,IANW,kBAMJ;AACH,WAAM;AACF,MAAA,OAAO,EAAE;AACL,QAAA,KAAK,EAAE;AACH,UAAA,EAAE,EAAE,kBADD;AAEH,UAAA,SAAS,EAAE;AAFR,SADF;AAKL,QAAA,KAAK,EAAE;AACH,UAAA,UAAU,EAAE;AADT;AALF,OADP;AAUF,MAAA,MAAM,EAAE,CAAC;AACL,QAAA,IAAI,EAAE,UADD;AAEL,QAAA,IAAI,EAAE;AAFD,OAAD,CAVN;AAcF,MAAA,WAAW,EAAE;AAdX,KAAN;AAgBH,GAvBU;AAwBX,EAAA,OAAO,EAAE;AACC,IAAA,QADD,oBACU,EADV,EACa;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEO,KAAK,6CAAsC,EAAtC,GAA2C;AACjE,kBAAA,MAAM,EAAE,KADyD;AAEjE,kBAAA,IAAI,EAAE;AAF2D,iBAA3C,CAFZ;;AAAA;AAEV,gBAAA,QAFU;AAAA;AAAA,uBAMI,QAAQ,CAAC,IAAT,EANJ;;AAAA;AAMV,gBAAA,IANU;AAQV,gBAAA,UARU,GAQG,EARH;AASV,gBAAA,aATU,GASM,EATN;AAUd,gBAAA,IAAI,CAAC,OAAL,CAAa,UAAA,KAAI,EAAK;AAClB,kBAAA,UAAU,CAAC,IAAX,CAAgB,KAAK,CAAC,CAAD,CAArB;AACA,kBAAA,aAAa,CAAC,IAAd,CAAmB,KAAK,CAAC,CAAD,CAAxB;AACH,iBAHD;AAKA,gBAAA,KAAI,CAAC,MAAL,CAAY,CAAZ,EAAe,IAAf,GAAsB,UAAtB;AACA,gBAAA,KAAI,CAAC,OAAL,CAAa,KAAb,CAAmB,UAAnB,GAAgC,aAAhC;AAEA,gBAAA,KAAI,CAAC,WAAL,GAAmB,IAAnB;;AAlBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBlB;AApBK,GAxBE;AA8CX,EAAA,WA9CW,yBA8CE;AACT,SAAK,QAAL,CAAc,KAAK,EAAnB;AACJ;AAhDW,CAAf","sourcesContent":["<template>\n    <main>\n        <h1>{{type}} Sensor: {{id}}</h1>\n        <apexchart v-if=\"loaded_data\" width=\"500\" type=\"line\" :options=\"options\" :series=\"series\"></apexchart>\n    </main>\n</template>\n\n<script>\nexport default {\n    name: 'SensorGraph',\n    props: {\n        id: Number,\n        type: String\n    },\n    data() {\n        return{\n            options: {\n                chart: {\n                    id: 'vuechart-example',\n                    foreColor: '#000'\n                },\n                xaxis: {\n                    categories: Array\n                }\n            },\n            series: [{\n                name: 'series-1',\n                data: Array\n            }],\n            loaded_data: false\n        }\n    },\n    methods: {\n        async get_data(id){\n            \n            let response = await fetch(`http://localhost:4567/sensor_data/${id}`,{\n                method: 'GET',\n                mode: 'cors'\n            })\n            let data = (await response.json())\n\n            let value_list = []\n            let category_list = []\n            data.forEach(value => {\n                value_list.push(value[0])\n                category_list.push(value[1])\n            })\n          \n            this.series[0].data = value_list\n            this.options.xaxis.categories = category_list\n\n            this.loaded_data = true\n        }\n    },\n    beforeMount(){\n        this.get_data(this.id)\n    }\n}\n</script>\n\n<style scoped>\n    main{\n        width: 600px;\n        height: 400px;\n        background-color: lightgray;\n    }\n</style>"],"sourceRoot":""}]}
{"remainingRequest":"/Users/tintin.wihlborg/Documents/Projects/growpipes-apl/Growpipes-apl/frontend/router_test/router-test/node_modules/babel-loader/lib/index.js!/Users/tintin.wihlborg/Documents/Projects/growpipes-apl/Growpipes-apl/frontend/router_test/router-test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tintin.wihlborg/Documents/Projects/growpipes-apl/Growpipes-apl/frontend/router_test/router-test/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/tintin.wihlborg/Documents/Projects/growpipes-apl/Growpipes-apl/frontend/router_test/router-test/src/components/SensorGraph.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/tintin.wihlborg/Documents/Projects/growpipes-apl/Growpipes-apl/frontend/router_test/router-test/src/components/SensorGraph.vue","mtime":1614772253789},{"path":"/Users/tintin.wihlborg/Documents/Projects/growpipes-apl/Growpipes-apl/frontend/router_test/router-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tintin.wihlborg/Documents/Projects/growpipes-apl/Growpipes-apl/frontend/router_test/router-test/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tintin.wihlborg/Documents/Projects/growpipes-apl/Growpipes-apl/frontend/router_test/router-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tintin.wihlborg/Documents/Projects/growpipes-apl/Growpipes-apl/frontend/router_test/router-test/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy90aW50aW4ud2lobGJvcmcvRG9jdW1lbnRzL1Byb2plY3RzL2dyb3dwaXBlcy1hcGwvR3Jvd3BpcGVzLWFwbC9mcm9udGVuZC9yb3V0ZXJfdGVzdC9yb3V0ZXItdGVzdC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnU2Vuc29yR3JhcGgnLAogIHByb3BzOiB7CiAgICBpZDogTnVtYmVyLAogICAgdHlwZTogU3RyaW5nCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgb3B0aW9uczogewogICAgICAgIGNoYXJ0OiB7CiAgICAgICAgICBpZDogJ3Z1ZWNoYXJ0LWV4YW1wbGUnCiAgICAgICAgfSwKICAgICAgICB4YXhpczogewogICAgICAgICAgY2F0ZWdvcmllczogWzE5OTEsIDE5OTIsIDE5OTMsIDE5OTQsIDE5OTUsIDE5OTYsIDE5OTcsIDE5OThdCiAgICAgICAgfQogICAgICB9LAogICAgICBzZXJpZXM6IFt7CiAgICAgICAgbmFtZTogJ3Nlcmllcy0xJywKICAgICAgICBkYXRhOiBBcnJheQogICAgICB9XQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldF9kYXRhOiBmdW5jdGlvbiBnZXRfZGF0YShpZCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgcmVzcG9uc2UsIGRhdGE7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29uc29sZS5sb2coaWQpOwoKICAgICAgICAgICAgICAgIGlmIChpZCA9PSAxKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzLnNlcmllc1swXS5kYXRhID0gWzEsIDYsIDIsIDgsIDUsIDYsIDddOwogICAgICAgICAgICAgICAgfSBlbHNlIGlmIChpZCA9PSAyKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzLnNlcmllc1swXS5kYXRhID0gWzIsIDEwLCAxLCA1LCA2LCAzLCA5XTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cDovL2xvY2FsaG9zdDo0NTY3L3NlbnNvcl9kYXRhLyIuY29uY2F0KGlkKSwgewogICAgICAgICAgICAgICAgICBtZXRob2Q6ICdHRVQnLAogICAgICAgICAgICAgICAgICBtb2RlOiAnY29ycycKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNzsKICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIGRhdGEgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgLy8gdmFsdWVfbGlzdCA9IFtdCiAgICAgICAgICAgICAgICAvLyBjYXRlZ29yeV9saXN0ID0gW10KICAgICAgICAgICAgICAgIC8vIGRhdGEuZm9yRWFjaCh2YWx1ZSA9PiB7CiAgICAgICAgICAgICAgICAvLyAgICAgdmFsdWVfbGlzdC5wdXNoCiAgICAgICAgICAgICAgICAvLyB9KQogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSk7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIGJlZm9yZU1vdW50OiBmdW5jdGlvbiBiZWZvcmVNb3VudCgpIHsKICAgIHRoaXMuZ2V0X2RhdGEodGhpcy5pZCk7CiAgfQp9Ow=="},{"version":3,"sources":["/Users/tintin.wihlborg/Documents/Projects/growpipes-apl/Growpipes-apl/frontend/router_test/router-test/src/components/SensorGraph.vue"],"names":[],"mappings":";;;;AAQA,eAAe;AACX,EAAA,IAAI,EAAE,aADK;AAEX,EAAA,KAAK,EAAE;AACH,IAAA,EAAE,EAAE,MADD;AAEH,IAAA,IAAI,EAAE;AAFH,GAFI;AAMX,EAAA,IANW,kBAMJ;AACH,WAAM;AACF,MAAA,OAAO,EAAE;AACL,QAAA,KAAK,EAAE;AACH,UAAA,EAAE,EAAE;AADD,SADF;AAIL,QAAA,KAAK,EAAE;AACH,UAAA,UAAU,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C;AADT;AAJF,OADP;AASF,MAAA,MAAM,EAAE,CAAC;AACL,QAAA,IAAI,EAAE,UADD;AAEL,QAAA,IAAI,EAAE;AAFD,OAAD;AATN,KAAN;AAcH,GArBU;AAsBX,EAAA,OAAO,EAAE;AACC,IAAA,QADD,oBACU,EADV,EACa;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACd,gBAAA,OAAO,CAAC,GAAR,CAAY,EAAZ;;AACA,oBAAI,EAAC,IAAK,CAAV,EAAY;AACR,kBAAA,KAAI,CAAC,MAAL,CAAY,CAAZ,EAAe,IAAf,GAAsB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,CAAtB;AACH,iBAFD,MAEM,IAAG,EAAC,IAAK,CAAT,EAAW;AACb,kBAAA,KAAI,CAAC,MAAL,CAAY,CAAZ,EAAe,IAAf,GAAsB,CAAC,CAAD,EAAG,EAAH,EAAM,CAAN,EAAQ,CAAR,EAAU,CAAV,EAAY,CAAZ,EAAc,CAAd,CAAtB;AACJ;;AANc;AAAA,uBAOO,KAAK,6CAAsC,EAAtC,GAA2C;AACjE,kBAAA,MAAM,EAAE,KADyD;AAEjE,kBAAA,IAAI,EAAE;AAF2D,iBAA3C,CAPZ;;AAAA;AAOV,gBAAA,QAPU;AAAA;AAAA,uBAWI,QAAQ,CAAC,IAAT,EAXJ;;AAAA;AAWV,gBAAA,IAXU;AAad;AACA;AACA;AACA;AACA;AAEA,gBAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;;AAnBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBlB;AArBK,GAtBE;AA6CX,EAAA,WA7CW,yBA6CE;AACT,SAAK,QAAL,CAAc,KAAK,EAAnB;AACJ;AA/CW,CAAf","sourcesContent":["<template>\n    <main>\n        <h1>{{type}} Sensor: {{id}}</h1>\n        <apexchart width=\"500\" type=\"line\" :options=\"options\" :series=\"series\"></apexchart>\n    </main>\n</template>\n\n<script>\nexport default {\n    name: 'SensorGraph',\n    props: {\n        id: Number,\n        type: String\n    },\n    data() {\n        return{\n            options: {\n                chart: {\n                    id: 'vuechart-example'\n                },\n                xaxis: {\n                    categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998]\n                }\n            },\n            series: [{\n                name: 'series-1',\n                data: Array\n            }]\n        }\n    },\n    methods: {\n        async get_data(id){\n            console.log(id)\n            if (id == 1){\n                this.series[0].data = [1,6,2,8,5,6,7]\n            }else if(id == 2){\n                this.series[0].data = [2,10,1,5,6,3,9]\n            }\n            let response = await fetch(`http://localhost:4567/sensor_data/${id}`,{\n                method: 'GET',\n                mode: 'cors'\n            })\n            let data = (await response.json())\n\n            // value_list = []\n            // category_list = []\n            // data.forEach(value => {\n            //     value_list.push\n            // })\n\n            console.log(data)\n        }\n    },\n    beforeMount(){\n        this.get_data(this.id)\n    }\n}\n</script>\n\n<style scoped>\n    main{\n        width: 600px;\n        height: 400px;\n        background-color: purple;\n    }\n</style>"],"sourceRoot":""}]}
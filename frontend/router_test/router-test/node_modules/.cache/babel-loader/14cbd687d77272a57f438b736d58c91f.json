{"remainingRequest":"/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/node_modules/babel-loader/lib/index.js!/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/src/components/SensorGraph.vue?vue&type=template&id=3273f498&scoped=true","dependencies":[{"path":"/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/src/components/SensorGraph.vue","mtime":1614954032854},{"path":"/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgdG9EaXNwbGF5U3RyaW5nIGFzIF90b0Rpc3BsYXlTdHJpbmcsIGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jaywgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUsIHdpdGhTY29wZUlkIGFzIF93aXRoU2NvcGVJZCB9IGZyb20gInZ1ZSI7Cgp2YXIgX3dpdGhJZCA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoImRhdGEtdi0zMjczZjQ5OCIpOwoKZXhwb3J0IHZhciByZW5kZXIgPSAvKiNfX1BVUkVfXyovX3dpdGhJZChmdW5jdGlvbiAoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF9jb21wb25lbnRfYXBleGNoYXJ0ID0gX3Jlc29sdmVDb21wb25lbnQoImFwZXhjaGFydCIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soIm1haW4iLCBudWxsLCBbX2NyZWF0ZVZOb2RlKCJoMSIsIG51bGwsIF90b0Rpc3BsYXlTdHJpbmcoJHByb3BzLnR5cGUpICsgIiBTZW5zb3I6ICIgKyBfdG9EaXNwbGF5U3RyaW5nKCRwcm9wcy5pZCksIDEKICAvKiBURVhUICovCiAgKSwgJGRhdGEubG9hZGVkX2RhdGEgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9hcGV4Y2hhcnQsIHsKICAgIGtleTogMCwKICAgIHdpZHRoOiAiNTAwIiwKICAgIHR5cGU6ICJsaW5lIiwKICAgIG9wdGlvbnM6ICRkYXRhLm9wdGlvbnMsCiAgICBzZXJpZXM6ICRkYXRhLnNlcmllcwogIH0sIG51bGwsIDgKICAvKiBQUk9QUyAqLwogICwgWyJvcHRpb25zIiwgInNlcmllcyJdKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSldKTsKfSk7"},{"version":3,"sources":["/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/src/components/SensorGraph.vue"],"names":[],"mappings":";;;;;;;uBACI,YAAA,CAGO,MAHP,EAGO,IAHP,EAGO,CAFH,YAAA,CAAgC,IAAhC,EAAgC,IAAhC,EAAgC,gBAAA,CAA1B,MAAA,CAAA,IAA0B,CAAA,GAApB,WAAoB,GAAX,gBAAA,CAAE,MAAA,CAAA,EAAF,CAArB,EAAyB;AAAA;AAAzB,GAEG,EADc,KAAA,CAAA,W,kBAAjB,YAAA,CAAsG,oBAAtG,EAAsG;UAAA;AAAxE,IAAA,KAAK,EAAC,KAAkE;AAA5D,IAAA,IAAI,EAAC,MAAuD;AAA/C,IAAA,OAAO,EAAE,KAAA,CAAA,OAAsC;AAA5B,IAAA,MAAM,EAAE,KAAA,CAAA;AAAoB,GAAtG,E,IAAA,E;;AAAA,I,qBAAA,C,qCACG,CAHP,C","sourcesContent":["<template>\n    <main>\n        <h1>{{type}} Sensor: {{id}}</h1>\n        <apexchart v-if=\"loaded_data\" width=\"500\" type=\"line\" :options=\"options\" :series=\"series\"></apexchart>\n    </main>\n</template>\n\n<script>\nexport default {\n    name: 'SensorGraph',\n    props: {\n        id: Number,\n        type: String\n    },\n    data() {\n        return{\n            options: {\n                chart: {\n                    id: 'vuechart-example',\n                    foreColor: '#000'\n                },\n                xaxis: {\n                    categories: Array\n                }\n            },\n            series: [{\n                name: 'series-1',\n                data: Array\n            }],\n            loaded_data: false\n        }\n    },\n    methods: {\n        async get_data(id){\n            \n            let response = await fetch(`http://localhost:4567/sensor_data/${id}`,{\n                method: 'GET',\n                mode: 'cors'\n            })\n            let data = (await response.json())\n\n            let value_list = []\n            let category_list = []\n            data.forEach(value => {\n                value_list.push(value[0])\n                category_list.push(value[1])\n            })\n          \n            this.series[0].data = value_list\n            this.options.xaxis.categories = category_list\n\n            this.loaded_data = true\n        }\n    },\n    beforeMount(){\n        this.get_data(this.id)\n    }\n}\n</script>\n\n<style scoped>\n    main{\n        width: 600px;\n        height: 400px;\n        background-color: lightgray;\n    }\n</style>"],"sourceRoot":""}]}
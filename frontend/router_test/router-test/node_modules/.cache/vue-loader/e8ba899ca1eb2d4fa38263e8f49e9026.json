{"remainingRequest":"/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/src/views/Home.vue?vue&type=template&id=fae5bece&scoped=true","dependencies":[{"path":"/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/src/views/Home.vue","mtime":1614608124955},{"path":"/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0iaG9tZSI+CiAgICA8aDE+SG9tZXBhZ2U8L2gxPgogICAgPHA+TG9yZW0gaXBzdW0gZG9sb3IsIHNpdCBhbWV0IGNvbnNlY3RldHVyIGFkaXBpc2ljaW5nIGVsaXQuIFJlbSBlaXVzLCBtYXhpbWUgc29sdXRhLCB1bmRlIGxpYmVybyBhbGlhcyBiZWF0YWUgdGVtcG9yYSBkb2xvcmVzIGRlYml0aXMgb21uaXMgZGVsZWN0dXMuIEF0LCBzZWQgcXVpPyBJdGFxdWUgdXQgZWxpZ2VuZGkgYWRpcGlzY2kgbnVtcXVhbSBhPzwvcD4KICAgIDxTZW5zb3Igdi1mb3I9IlNlbnNvciBpbiBzZW5zb3JzIiA6a2V5PSJTZW5zb3IuaWQiIDppZD0iU2Vuc29yLmlkIiA6ZGF0YT0iU2Vuc29yLmRhdGEiIDp0eXBlPSJTZW5zb3IudHlwZSIgdi1vbjpjbGljaz0idGVzdDIoU2Vuc29yLmlkKSIvPgogICAgPGRpdiBjbGFzcz0iZ3JhcGhob2xkZXIiPgogICAgICA8U2Vuc29yR3JhcGggdi1pZj0ic2hvd19ncmFwaC5zdGF0ZSIgOmtleT0ic2hvd19ncmFwaC5pZCIgOmlkPSJzaG93X2dyYXBoLmlkIiA6dHlwZT0ic2hvd19ncmFwaC50eXBlIi8+CiAgICA8L2Rpdj4KICA8L2Rpdj4K"},{"version":3,"sources":["/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/src/views/Home.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChzI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxG,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/tintin.wihlborg/Documents/Projects/Growpipes-apl/frontend/router_test/router-test/src/views/Home.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"home\">\n    <h1>Homepage</h1>\n    <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Rem eius, maxime soluta, unde libero alias beatae tempora dolores debitis omnis delectus. At, sed qui? Itaque ut eligendi adipisci numquam a?</p>\n    <Sensor v-for=\"Sensor in sensors\" :key=\"Sensor.id\" :id=\"Sensor.id\" :data=\"Sensor.data\" :type=\"Sensor.type\" v-on:click=\"test2(Sensor.id)\"/>\n    <div class=\"graphholder\">\n      <SensorGraph v-if=\"show_graph.state\" :key=\"show_graph.id\" :id=\"show_graph.id\" :type=\"show_graph.type\"/>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport Sensor from '../components/Sensor.vue'\nimport SensorGraph from '../components/SensorGraph.vue'\n\n\nexport default {\n  name: 'Home',\n  data() {\n    return{\n      sensors: {},\n      show_graph: {state: false, id: Number, type: String}\n    }\n  },\n  components: {\n    Sensor,\n    SensorGraph\n  },\n  methods: {\n    async getsensors(){\n      \n      const response = await fetch('http://localhost:4567/',{\n        method: 'GET',\n        mode: 'cors'\n        \n      })\n      let data =(await response.json())    \n  \n      data.forEach(value => {\n        Object.assign(this.sensors, {[value[0]]: {id: value[0], type: value[1], data: value[2]}})\n      })\n      this.updatesensor()\n    },\n    async updatesensor(){\n      let response = await fetch('http://localhost:4567/',{\n        method: 'GET',\n        mode: 'cors'\n      })\n\n      if (response.status == 502) {\n        await this.updatesensor()\n      } else if (response.status != 200) {\n\n        console.log(response.statusText)\n        await new Promise(resolve =>  setTimeout(resolve, 1000))\n        await this.updatesensor()\n\n      } else {\n        let data = (await response.json())\n        \n        data.forEach(sensor => { \n          Object.assign(this.sensors[sensor[0]], {id: sensor[0], data: sensor[2]})\n        })\n        \n        await this.updatesensor()\n      }\n    },\n    test2(id){\n      console.log(this.sensors[id])\n      this.show_graph.state = true\n      this.show_graph.id = id\n      this.show_graph.type = this.sensors[id].type\n    }\n  },\n  beforeMount(){\n    this.getsensors()\n  }\n}\n</script>\n\n<style scoped>\n\n  .graphholder{\n    position: absolute;\n    top: 50% - 200px;\n    left: 40%;\n  }\n\n</style>\n"]}]}